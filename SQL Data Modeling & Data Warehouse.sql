USE [master]
GO

/****** Object:  Database [FINAL PROJECT 2]    Script Date: 5/19/2021 11:46:43 PM ******/
CREATE DATABASE [FINAL PROJECT 2]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'FINAL PROJECT 2', FILENAME = N'D:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\FINAL PROJECT 2.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'FINAL PROJECT 2_log', FILENAME = N'D:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\FINAL PROJECT 2_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [FINAL PROJECT 2].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

ALTER DATABASE [FINAL PROJECT 2] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET ARITHABORT OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [FINAL PROJECT 2] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [FINAL PROJECT 2] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET  DISABLE_BROKER 
GO

ALTER DATABASE [FINAL PROJECT 2] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [FINAL PROJECT 2] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET RECOVERY SIMPLE 
GO

ALTER DATABASE [FINAL PROJECT 2] SET  MULTI_USER 
GO

ALTER DATABASE [FINAL PROJECT 2] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [FINAL PROJECT 2] SET DB_CHAINING OFF 
GO

ALTER DATABASE [FINAL PROJECT 2] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [FINAL PROJECT 2] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [FINAL PROJECT 2] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [FINAL PROJECT 2] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [FINAL PROJECT 2] SET QUERY_STORE = OFF
GO

ALTER DATABASE [FINAL PROJECT 2] SET  READ_WRITE 
GO




/******TABLES******/


CREATE TABLE SUPPLIER (
SUPPLIER_ID			VARCHAR(6) PRIMARY KEY,
SUPPLIER_NAME		CHAR(25),
SUPPLIER_ADDRESS	CHAR(35),
SUPPLIER_CITY		CHAR(30),
SUPPLIER_STATE		CHAR(30),
SUPPLIER_ZIP		CHAR(9),
SUPPLIER_COUNTRY	CHAR(35),
SUPPLIER_CREDIT		CHAR(7),
CONSTRAINT check_id1 CHECK(SUPPLIER_ID LIKE '[S][P][0-9][0-9][0-9][0-9]'));


CREATE TABLE CUSTOMER (
CUSTOMER_ID			VARCHAR(5)	PRIMARY KEY,
CUSTOMER_NAME		CHAR (25),
CUSTOMER_ADDRESS	CHAR (40),
CUSTOMER_CITY		CHAR (35),
CUSTOMER_STATE		CHAR (2),
CUSTOMER_ZIP		VARCHAR (10),
CUSTOMER_COUNTRY	VARCHAR (35),
CUSTOMER_EMAIL		CHAR (40),
CUSTOMER_CREDIT		VARCHAR (7),
CONSTRAINT check_id2 CHECK(CUSTOMER_ID LIKE '[C][0-9][0-9][0-9][0-9]'));



CREATE TABLE PRODUCT (
PRODUCT_ID			NUMERIC (9,0)	PRIMARY KEY,
PRODUCT_DESC		VARCHAR (25),
SUPPLIER_ID			VARCHAR (6),
UOM					CHAR(5),
FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER);


CREATE TABLE BRANCH (
BRANCH_ID			VARCHAR(4) PRIMARY KEY,
BRANCH_NAME			CHAR(30),
BRANCH_ADDRESS		CHAR(45),
BRANCH_CITY			CHAR(25),
BRANCH_STATE		CHAR(2)
);



CREATE TABLE INVENTORY (
PRODUCT_ID			NUMERIC(9,0),
QUANTITY			INTEGER DEFAULT 0,
ALLOCATED_QTY		INTEGER DEFAULT 0,
UNALLOCATED_QTY		AS ([QUANTITY]-[ALLOCATED_QTY]),
UNIT_COST			NUMERIC(8,2) NOT NULL,
BRANCH_ID			VARCHAR (4),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT,
FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH);



CREATE TABLE SO (
SALES_ORDER			VARCHAR (7) PRIMARY KEY,
ENTERED_BY			VARCHAR (5),
ORDER_DATE			DATETIME NOT NULL,
CUSTOMER_ID			VARCHAR (5),
PRODUCT_ID			NUMERIC (9,0),
QUANTITY			INTEGER,
UNIT_COST			NUMERIC(8,2),
UNIT_PRICE			NUMERIC(8,2),
EXTENDED_VALUE		AS ([QUANTITY]*[UNIT_PRICE]),
DUE_DATE			DATETIME,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT);


CREATE TABLE WO (
WO_ID				VARCHAR(6) PRIMARY KEY,
FINISHED_PRODUCT_ID	VARCHAR(7),
PRODUCT_ID			NUMERIC(9,0),
PRODUCT_DESC		VARCHAR(25),
QUANTITY_REQD		INTEGER DEFAULT 0,
QUANTITY_COMP		INTEGER DEFAULT 0,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT);



CREATE TABLE PO (
PURCHASE_ORDER		NUMERIC(8,0) PRIMARY KEY,
SUPPLIER_ID			VARCHAR(6),
PRODUCT_ID			NUMERIC(9,0),
QUANTITY			INTEGER,
UNIT_COST			NUMERIC(8,2),
EXTENDED_VALUE		AS ([QUANTITY]*[UNIT_COST]),
ENTERED_BY			VARCHAR (5),
DUE_DATE			DATETIME,
PO_TYPE				CHAR(1),
WO_ID				VARCHAR(6),
FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT,
FOREIGN KEY (WO_ID) REFERENCES WO);



CREATE TABLE INVOICE (
INVOICE_ID			VARCHAR(8) PRIMARY KEY,
SALES_ORDER			VARCHAR (7),
INVOICE_DATE		DATETIME,
CUSTOMER_ID			VARCHAR(5),
PRODUCT_ID			NUMERIC(9,0),
QTY_INVOICED		INTEGER,
UNIT_PRICE			NUMERIC(8,2),
TOTAL_INVOICED		AS ([QTY_INVOICED]*[UNIT_PRICE]),
CUSTOMER_CREDIT		VARCHAR (7),
FOREIGN KEY (SALES_ORDER) REFERENCES SO,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT);

CREATE TABLE DO (
DO_ID				VARCHAR(6) PRIMARY KEY,
SHIPPING_ID			VARCHAR(4),
RECEIVING_ID		VARCHAR(4),
PRODUCT_ID			NUMERIC(9,0),
QTY_TRANSFER		INTEGER,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT);






/****INSERTING ROWS****/

INSERT INTO SUPPLIER([SUPPLIER_ID], [SUPPLIER_NAME],[SUPPLIER_ADDRESS],[SUPPLIER_CITY],[SUPPLIER_STATE],[SUPPLIER_ZIP],[SUPPLIER_COUNTRY],[SUPPLIER_CREDIT])
SELECT [Supplier ID]
      ,[Suplier Name]
      ,[Supplier's Address]
      ,[Supplier's City]
      ,[Supplier's State]
      ,[Supplier's Zipcode]
      ,[Supplier's Country]
      ,[Supplier's Credit Terms]
  FROM [FINAL PROJECT 2].[dbo].[SUPPLIER$];


INSERT INTO CUSTOMER([CUSTOMER_ID],[CUSTOMER_NAME],[CUSTOMER_ADDRESS],[CUSTOMER_CITY],[CUSTOMER_STATE],[CUSTOMER_ZIP],[CUSTOMER_COUNTRY],[CUSTOMER_EMAIL],[CUSTOMER_CREDIT])
SELECT [Customer ID]
      ,[Customer's Name]
      ,[Customer's Address]
      ,[Customer's City]
      ,[Customer's State]
      ,[Customer's Zipcode]
      ,[Customer's Country]
      ,[Customer's Email Address]
      ,[Customer's Credit Terms]
FROM [FINAL PROJECT 2].[dbo].[CUSTOMER$]
WHERE [CUSTOMER ID] is not NULL;


INSERT INTO PRODUCT([PRODUCT_ID], [PRODUCT_DESC], [SUPPLIER_ID], [UOM])
SELECT [Product ID]
      ,[Product Derscription]
      ,[Supplier ID]
      ,[UOM]
  FROM [FINAL PROJECT 2].[dbo].[PRODUCT$]
where [PRODUCT ID] is not NULL;


INSERT INTO BRANCH([BRANCH_ID], [BRANCH_NAME], [BRANCH_ADDRESS], [BRANCH_CITY], [BRANCH_STATE])
SELECT [Branch ID]
      ,[Branch Name]
      ,[Branch's Address]
      ,[Branch's City]
      ,[Branch's State]
  FROM [FINAL PROJECT 2].[dbo].[BRANCH$];


INSERT INTO INVENTORY([PRODUCT_ID], [QUANTITY], [ALLOCATED_QTY], [UNIT_COST], [BRANCH_ID])
SELECT [Product ID]
      ,[Quantity On Hand]
      ,[Allocated Quantity to Order]
      ,[Unit Cost]
      ,[Branch ID]
  FROM [FINAL PROJECT 2].[dbo].[INVENTORY$];


INSERT INTO SO([SALES_ORDER], [ENTERED_BY], [ORDER_DATE], [CUSTOMER_ID], [PRODUCT_ID], [QUANTITY], [UNIT_COST], [UNIT_PRICE])
SELECT [Sales Order ID]
      ,[Entered by (Employee ID)]
      ,[Order Date]
      ,[Customer ID]
      ,[Product ID]
      ,[Quantity]
      ,[Unit Cost]
      ,[Unit Price]
  FROM [FINAL PROJECT 2].[dbo].['SALES ORDER$'];



INSERT INTO WO([WO_ID],[FINISHED_PRODUCT_ID],[PRODUCT_ID],[PRODUCT_DESC],[QUANTITY_REQD],[QUANTITY_COMP])
SELECT [Work Order ID]
      ,[Finished Product ID]
      ,[Product ID]
      ,[Product Description]
      ,[Quantity Required]
      ,[Quantity Completed]
  FROM [FINAL PROJECT 2].[dbo].['WORK ORDER$'];



INSERT INTO PO([PURCHASE_ORDER],[SUPPLIER_ID],[QUANTITY],[UNIT_COST],[ENTERED_BY],[DUE_DATE],[PO_TYPE],[WO_ID])
SELECT [Purchase Order ID]
      ,[Supplier ID]
      ,[Quantity]
      ,[Unit Cost]
      ,[Entered by (Employee ID)]
      ,[Due Date]
      ,[Purchase Order Type (S/R)]
      ,[Work Order ID]
FROM [FINAL PROJECT 2].[dbo].['PURCHASE ORDER$'];


INSERT INTO INVOICE([INVOICE_ID],[SALES_ORDER],[INVOICE_DATE],[CUSTOMER_ID],[PRODUCT_ID],[QTY_INVOICED],[UNIT_PRICE],[CUSTOMER_CREDIT])
SELECT [Invoice ID]
      ,[Sales Order ID]
      ,[Invoice Date]
      ,[Customer ID]
      ,[Product ID]
      ,[Quantity Invoiced]
      ,[Unit Price]
      ,[Customer's Credit Terms]
  FROM [FINAL PROJECT 2].[dbo].[INVOICE$];

INSERT INTO DO([DO_ID],[SHIPPING_ID],[RECEIVING_ID],[PRODUCT_ID],[QTY_TRANSFER])
SELECT [DO ID]
      ,[Shipping Branch ID]
      ,[Receiving Branch ID]
      ,[Product ID]
      ,[Quantity transfer]
  FROM [FINAL PROJECT 2].[dbo].['DISTRIBUTION ORDER$']
  WHERE [DO ID] IS NOT NULL;


/******TABLE UPDATE******/

UPDATE INVENTORY 
   SET UNIT_COST=(SELECT UNIT_COST FROM PO WHERE INVENTORY.PRODUCT_ID = PO.PRODUCT_ID);

UPDATE SO 
   SET UNIT_COST=(SELECT UNIT_COST FROM PO WHERE SO.PRODUCT_ID = PO.PRODUCT_ID);

UPDATE WO 
   SET PRODUCT_DESC=(SELECT PRODUCT_DESC FROM PRODUCT WHERE PRODUCT.PRODUCT_DESC = WO.PRODUCT_DESC);

UPDATE INVOICE
	SET CUSTOMER_CREDIT=(SELECT CUSTOMER_CREDIT FROM CUSTOMER WHERE CUSTOMER.CUSTOMER_CREDIT = INVOICE.CUSTOMER_CREDIT);
